Index: gcc-linaro-4.8-2014.04/gcc/cp/Make-lang.in
===================================================================
--- gcc-linaro-4.8-2014.04.orig/gcc/cp/Make-lang.in
+++ gcc-linaro-4.8-2014.04/gcc/cp/Make-lang.in
@@ -115,7 +115,7 @@ else
 # deleting the $(srcdir)/cp/cfns.h file.
 $(srcdir)/cp/cfns.h:
 endif
-	gperf -o -C -E -k '1-6,$$' -j1 -D -N 'libc_name_p' -L ANSI-C \
+	gperf -o -C -E -k '1-6,$$' -j1 -D -N 'libc_name_p' -L C++ \
 		$(srcdir)/cp/cfns.gperf --output-file $(srcdir)/cp/cfns.h
 
 #
Index: gcc-linaro-4.8-2014.04/gcc/cp/cfns.gperf
===================================================================
--- gcc-linaro-4.8-2014.04.orig/gcc/cp/cfns.gperf
+++ gcc-linaro-4.8-2014.04/gcc/cp/cfns.gperf
@@ -16,14 +16,6 @@ for more details.
 You should have received a copy of the GNU General Public License
 along with GCC; see the file COPYING3.  If not see
 <http://www.gnu.org/licenses/>.  */
-#ifdef __GNUC__
-__inline
-#endif
-static unsigned int hash (const char *, unsigned int);
-#ifdef __GNUC__
-__inline
-#endif
-const char * libc_name_p (const char *, unsigned int);
 %}
 %%
 # The standard C library functions, for feeding to gperf; the result is used
Index: gcc-linaro-4.8-2014.04/gcc/cp/cfns.h
===================================================================
--- gcc-linaro-4.8-2014.04.orig/gcc/cp/cfns.h
+++ gcc-linaro-4.8-2014.04/gcc/cp/cfns.h
@@ -28,7 +28,7 @@
 #error "gperf generated tables don't work with this execution character set. Please report a bug to <bug-gnu-gperf@gnu.org>."
 #endif
 
-#line 1 "cfns.gperf"
+#line 3 "cfns.gperf"
 
 /* Copyright (C) 2000-2013 Free Software Foundation, Inc.
 
@@ -47,25 +47,16 @@ for more details.
 You should have received a copy of the GNU General Public License
 along with GCC; see the file COPYING3.  If not see
 <http://www.gnu.org/licenses/>.  */
-#ifdef __GNUC__
-__inline
-#endif
-static unsigned int hash (const char *, unsigned int);
-#ifdef __GNUC__
-__inline
-#endif
-const char * libc_name_p (const char *, unsigned int);
-/* maximum key range = 391, duplicates = 0 */
+class libc_name
+{
+private:
+  static inline unsigned int hash (const char *str, unsigned int len);
+public:
+  static const char *libc_name_p (const char *str, unsigned int len);
+};
 
-#ifdef __GNUC__
-__inline
-#else
-#ifdef __cplusplus
-inline
-#endif
-#endif
-static unsigned int
-hash (register const char *str, register unsigned int len)
+inline unsigned int
+libc_name::hash (register const char *str, register unsigned int len)
 {
   static const unsigned short asso_values[] =
     {
@@ -122,14 +113,8 @@ hash (register const char *str, register
   return hval + asso_values[(unsigned char)str[len - 1]];
 }
 
-#ifdef __GNUC__
-__inline
-#ifdef __GNUC_STDC_INLINE__
-__attribute__ ((__gnu_inline__))
-#endif
-#endif
 const char *
-libc_name_p (register const char *str, register unsigned int len)
+libc_name::libc_name_p (register const char *str, register unsigned int len)
 {
   enum
     {
Index: gcc-linaro-4.8-2014.04/gcc/cp/except.c
===================================================================
--- gcc-linaro-4.8-2014.04.orig/gcc/cp/except.c
+++ gcc-linaro-4.8-2014.04/gcc/cp/except.c
@@ -1025,7 +1025,9 @@ nothrow_libfn_p (const_tree fn)
      unless the system headers are playing rename tricks, and if
      they are, we don't want to be confused by them.  */
   id = DECL_NAME (fn);
-  return !!libc_name_p (IDENTIFIER_POINTER (id), IDENTIFIER_LENGTH (id));
+  return !!libc_name::libc_name_p (IDENTIFIER_POINTER (id),
+                                  IDENTIFIER_LENGTH (id));
+
 }
 
 /* Returns nonzero if an exception of type FROM will be caught by a
